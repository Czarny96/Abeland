--ROGUE
go.property("projectileDir", vmath.vector3())
go.property("range", 230)
go.property("speed", 400)
go.property("poisonDamage", 5)			--HP
go.property("directDamage", 10)
go.property("poisonDuration", 4.5)	--s

local globals = require "main.globals"


function init(self)
	self.enemyHit = nil
	self.url = nil
	self.projectilelife = self.range / self.speed
	self.poisonTimer = 1
end

function update(self, dt)
	if globals.getPause() then
		return
	end
	if self.enemyHit == nil  then
		go.set_position(go.get_position() + self.projectileDir * self.speed * dt)
	else
		self.poisonDuration = self.poisonDuration - dt
		self.poisonTimer = self.poisonTimer - dt
	end
	
	self.projectilelife = self.projectilelife - dt
	if (self.projectilelife <= 0  and self.enemyHit == nil) or self.poisonDuration <= 0 then
		go.delete()
	end 

	-- DRAW ORDER
	g_applyDrawOrder(go.get_id(), 2)
end

function on_message(self, message_id, message, sender)
	if globals.getPause() then
		return
	end
	--Destroy on hit
	if message_id == hash("collision_response")  then
		if message.group == hash("enemy") then
			local url = msg.url(nil,message.other_id,"enemy")
			if self.enemyHit == nil then
				self.enemyHit = message.other_id
				self.url = msg.url(nil, self.enemyHit, "enemy")
				sprite.set_constant("#sprite", "tint", vmath.vector4(0))
				msg.post(url, "hit",{type = hash("plain"), damage = self.directDamage})
				msg.post("#wallCollider", "disable")
			elseif self.enemyHit == message.other_id then
				if self.poisonTimer <= 0 then
					self.poisonTimer = 1
					self.projectileLife = 5 
					msg.post(url, "hit",{type = hash("poison"), damage = self.poisonDamage})
				else
					go.set_position(go.get_position(self.enemyHit))
				end
			end
		else
			go.delete()
		end
	end

end