--ROGUE
go.property("shootingDelay", 0.4)
go.property("shootingDir", vmath.vector3(0,0,0))

--Flags
go.property("isShooting", false)

--Timers
go.property("shootingTimer", 0)

local playerModule = require "player.playerModule"

function init(self)
	self.shootingTimer = 0
	self.isShooting = false
	self.shootingDir = vmath.vector3(0, 0, 0)
end

function update(self, dt)
	--Shooting
	if self.isShooting and self.shootingTimer <= 0 then
		self.shootingDir = vmath.normalize(self.shootingDir)
		local l_angle = math.atan2(self.shootingDir.y, self.shootingDir.x)

		local l_x = self.shootingDir.x * math.cos(math.pi/6) - self.shootingDir.y * math.sin(math.pi/6)
		local l_y = self.shootingDir.x * math.sin(math.pi/6) + self.shootingDir.y * math.cos(math.pi/6)
		local l_dir1 = vmath.normalize(vmath.vector3(l_x, l_y, 0))
		local l_angle1 = math.atan2(l_dir1.y, l_dir1.x)

		l_x = self.shootingDir.x * math.cos(-math.pi/6) - self.shootingDir.y * math.sin(-math.pi/6)
		l_y = self.shootingDir.x * math.sin(-math.pi/6) + self.shootingDir.y * math.cos(-math.pi/6)
		local l_dir2 = vmath.normalize(vmath.vector3(l_x, l_y, 0))
		local l_angle2 = math.atan2(l_dir2.y, l_dir2.x)
		factory.create("#attackFactory", nil, vmath.quat_rotation_z(l_angle1), { projectileDir = l_dir1 })
		factory.create("#attackFactory", nil, vmath.quat_rotation_z(l_angle2), { projectileDir = l_dir2 })
		self.shootingTimer = self.shootingDelay
	else
		self.shootingTimer = self.shootingTimer - dt
	end

	--Reset flags
	self.isShooting = false
end

function on_message(self, message_id, message, sender)
	if message_id == hash("shoot") then
		self.isShooting = true
		self.shootingDir = vmath.vector3(message.x, message.y, 0)
	end
end