--MAGE
go.property("class", hash("mage"))
go.property("position", vmath.vector3(995, 540, 0.99))
go.property("movingDir", vmath.vector3(0, 0, 0))

--Class Properties
go.property("health", 120)
go.property("maxHealth", 120)
go.property("movingSpeed", 150)

--Absord Properties
go.property("absorb", 0)
go.property("absorbTimer", 0)

--Flags
go.property("isKilled", false)
go.property("isVulnerable", true)
go.property("isTargetable", true)

--Timers
go.property("nonVulnerableTimer", 0)
go.property("nonOperativeTimer", 0)
go.property("isTargetableTimer", 0)
go.property("animTimer", 0)

--Local Properties
go.property("isMoving", false)

--Local Colliders
go.property("wallCollisionCorrector", vmath.vector3())


local globals = require "main.globals"
local playersManager = require "managers.playersManager"
local playerModule = require "player.playerModule"

function init(self)
	playerModule.init(self)
end

function update(self, dt)
	--Menu
	if playersManager.getActivePlayersIDs() == 0 and g_gameState == g_gameStateEnum.inGame then
		g_goToGameOverScreen()
	end

	--Pause and dead body
	if globals.getPause() then
		return
	end
	
	--Death
	if self.health <= 0 then
		playerModule.death(self, dt)
	else
		--Movement
		if self.isMoving then
			playerModule.move(self, dt)
		end
	end
	playerModule.updateAnimation(self, dt)
	playerModule.manageFlagsAndTimers(self, dt)
end

function on_message(self, message_id, message, sender)
	if globals.getPause() then
		return
	end
	playerModule.messages(self, message_id, message, sender)
end