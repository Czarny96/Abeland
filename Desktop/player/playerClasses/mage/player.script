--MAGE

--Class Properties
go.property("movingDir", vmath.vector3(0, 0, 0))
go.property("position", vmath.vector3(0, 0, 0))
go.property("health", 80)
go.property("movingSpeed", 120)

--Flags
go.property("isKilled", false)

function init(self)
	label.set_text("#label_hp", self.health)
	self.position = go.get_position()
	--Local Properties
	self.isMoving = false
	--Local Colliders
	self.wallsCollider = {top = false, bottom = false,left = false,right = false}
	--Local Timers
	self.killedTimer = 0
	self.nonVulnerableTimer = 0
	self.nonOperativeTimer = 0
end

local function updateAnimation(self)
	if self.movingDir.x < -0.3 and self.movingDir.y > 0.3 then
		msg.post("#sprite", "play_animation", {id = hash("player_up_left")})
	elseif self.movingDir.x > 0.3 and self.movingDir.y > 0.3 then
		msg.post("#sprite", "play_animation", {id = hash("player_up_right")})
	elseif self.movingDir.x < -0.3 and self.movingDir.y < -0.3 then
		msg.post("#sprite", "play_animation", {id = hash("player_down_left")})
	elseif self.movingDir.x > 0.3 and self.movingDir.y < -0.3 then
		msg.post("#sprite", "play_animation", {id = hash("player_down_right")})
	elseif self.movingDir.y > 0.3  then
		msg.post("#sprite", "play_animation", {id = hash("player_up")})
	elseif self.movingDir.y < -0.3  then
		msg.post("#sprite", "play_animation", {id = hash("player_down")})
	elseif self.movingDir.x < -0.3  then
		msg.post("#sprite", "play_animation", {id = hash("player_left")})
	elseif self.movingDir.x > 0.3  then
		msg.post("#sprite", "play_animation", {id = hash("player_right")})
	else 
		msg.post("#sprite", "play_animation", {id = hash("player_down")})
	end
end

function update(self, dt)
	--Check if player is alive
	if self.isKilled then
		return
	end

	--Collisions with arena walls
	if (self.wallsCollider.top and self.movingDir.y > 0) or (self.wallsCollider.bottom and self.movingDir.y < 0) then
		self.movingDir.y = 0
	end
	if (self.wallsCollider.left and self.movingDir.x < 0) or (self.wallsCollider.right and self.movingDir.x > 0) then
		self.movingDir.x = 0
	end

	--Movement
	if self.isMoving then
		local playerPos = go.get_position()
		local movingDir = vmath.vector3(self.movingDir.x, self.movingDir.y,0)
		playerPos = playerPos + self.movingDir * self.movingSpeed * dt
		go.set_position(playerPos)
		go.set("#player", "position", go.get_position())
		updateAnimation(self)
	end

	--Death
	if self.health <= 0 then
		if not self.isKilled then
			msg.post("#sprite", "play_animation", {id = hash("player_killed")})
			msg.post("#death_sound", "play_sound", {gain = 0.5})
			self.killedTimer = 10
			self.isKilled = true
		else
			self.killedTimer = self.killedTimer - dt
			if self.killedTimer <= 0 then
				go.delete()
			end
		end
	end

	--Vulnerable flag
	if self.nonVulnerableTimer <= 0 then
		self.isVulnerable = true
	end
	--Collider flags
	self.wallsCollider.top = false
	self.wallsCollider.bottom = false
	self.wallsCollider.left = false
	self.wallsCollider.right = false

	--Timers
	self.nonVulnerableTimer = self.nonVulnerableTimer - dt
	self.nonOperativeTimer = self.nonOperativeTimer - dt
end

function on_message(self, message_id, message, sender)
	if self.isKilled then
		return
	elseif self.nonOperativeTimer > 0 then
		return
	end

	--Movement
	if message_id == hash("move") then
		self.movingDir.x = message.x
		self.movingDir.y = message.y
		if self.movingDir.x ~= 0 or self.movingDir.y ~= 0 then
			self.isMoving = true
			if self.nonVulnerableTimer > 0.25 then
				self.nonVulnerableTimer = 0.25
			end
		else
			self.isMoving = false
		end

	end

	--Invulnerability (all enemy interactions put here)
	if self.isVulnerable then
		--Got Hit
		if message_id == hash("hit") then
			self.health = self.health - message.dmg
			label.set_text("#label_hp", self.health)
		end
	end

	--Kill
	if message_id == hash("kill") then
		go.delete()
	end

	--AFK
	if message_id == hash("desactivate") then
		sprite.set_constant("#sprite", "tint", vmath.vector4(1, 1, 1, 0.33))
		self.isVulnerable = false
		self.nonVulnerableTimer = 50
	end

	--Activate if player came back
	if message_id == hash("activate") then
		self.nonVulnerableTimer = 50
		self.isVulnerable = false
		self.nonOperativeTimer = 2
		sprite.set_constant("#sprite", "tint", vmath.vector4(1, 1, 1, 1))
		msg.post("#sprite", "play_animation", {id = hash("player_afk")})
	end

	--Colliders
	if message_id == hash("contact_point_response") then	
		--Walls
		if message.group == hash("walls") then
			if sender.fragment == hash("wallsTopCollider") then
				self.wallsCollider.top = true
			elseif sender.fragment == hash("wallsBottomCollider") then
				self.wallsCollider.bottom = true
			end

			if sender.fragment == hash("wallsLeftCollider") then
				self.wallsCollider.left = true
			elseif sender.fragment == hash("wallsRightCollider") then
				self.wallsCollider.right = true
			end
		end
	end
end