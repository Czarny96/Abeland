function init(self)
	self.projectileSpeed = 50
	self.projectileSpeedByDistanceMultiplier = 0.3
	self.projectileLife = 10
end

function update(self, dt)
	local l_projectilePos = go.get_position()
	local l_playerPos = go.get("player#player", "position")

	local l_distanceBetweenPlayerAndProjectile = math.abs(math.sqrt(math.pow(l_projectilePos.x - l_playerPos.x, 2) + math.pow(l_projectilePos.y - l_playerPos.y, 2)), 2)
	print(l_distanceBetweenPlayerAndProjectile)
	
	-- fixing moving direction for enemy to follow player
	local l_positionDiffrenceAbs = (l_playerPos - l_projectilePos)
	l_positionDiffrenceAbs.x = math.abs(l_positionDiffrenceAbs.x)
	l_positionDiffrenceAbs.y = math.abs(l_positionDiffrenceAbs.y)
	local l_positionDiffrence = (l_playerPos - l_projectilePos)
	local l_movingDir = vmath.vector3(l_positionDiffrence.x,l_positionDiffrence.y, 0)
	l_movingDir = vmath.normalize(l_movingDir)

	l_projectilePos = l_projectilePos + l_movingDir * (self.projectileSpeed + l_distanceBetweenPlayerAndProjectile * self.projectileSpeedByDistanceMultiplier) * dt
	go.set_position(l_projectilePos)

	self.projectileLife = self.projectileLife - dt

	if(self.projectileLife <= 0) then
		go.delete()
	end 
end

function on_message(self, message_id, message, sender)
	if message_id == hash("collision_response") then
		go.delete()
	end
end

