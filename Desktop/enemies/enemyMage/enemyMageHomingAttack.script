function init(self)
	self.projectileSpeed = 50
	self.projectileSpeedByDistanceMultiplier = 0.3
	self.projectileLife = 10
end

function update(self, dt)
	local projectilePos = go.get_position()
	local playersPos = getPlayersPos()
	
	if getPlayersIDs() ~= 0 then
		local closestPlayerID = getPlayersIDs()[1]
		local closestPlayerPos = getPlayersPos()[1]
		local distanceToClosestPlayer = vmath.length(closestPlayerPos - projectilePos)
		
		for i, playerPos in pairs(playersPos) do 
			local distanceToCurrentPlayer = vmath.length(playerPos - projectilePos)
			if distanceToCurrentPlayer < distanceToClosestPlayer then
				closestPlayerID = getPlayersIDs()[i]
				closestPlayerPos = getPlayersPos()[i]
				distanceToClosestPlayer = vmath.length(playerPos - projectilePos)
			end
		end

		local positionDiffrenceAbs = (closestPlayerPos - projectilePos)
		positionDiffrenceAbs.x = math.abs(positionDiffrenceAbs.x)
		positionDiffrenceAbs.y = math.abs(positionDiffrenceAbs.y)
		
		local positionDiffrence = (closestPlayerPos - projectilePos)
		
		local movingDir = vmath.vector3(positionDiffrence.x,positionDiffrence.y, 0)
		movingDir = vmath.normalize(movingDir)

		projectilePos = projectilePos + movingDir * (self.projectileSpeed + distanceToClosestPlayer * self.distanceToClosestPlayer) * dt
		go.set_position(projectilePos)
	end	

	self.projectileLife = self.projectileLife - dt

	if(self.projectileLife <= 0) then
		go.delete()
	end 
end

function on_message(self, message_id, message, sender)
	if message_id == hash("collision_response") then
		go.delete()
	end
end

