go.property("enemyMovingDir", vmath.vector3(0, 0, 0))
go.property("hp", 100)

function init(self)
	self.movingSpeed = 50
	self.followDistance = 500
	self.runAwayDistance = 300
end

function update(self, dt)
	local enemyPos = go.get_position()
	local playersPos = getPlayersPos()

	if getPlayersIDs() ~= 0 then
		local closestPlayerID = getPlayersIDs()[1]
		local closestPlayerPos = getPlayersPos()[1]
		local distanceToClosestPlayer = vmath.length(closestPlayerPos - enemyPos)

		for i, playerPos in pairs(playersPos) do 
			local distanceToCurrentPlayer = vmath.length(playerPos - enemyPos)
			if distanceToCurrentPlayer < distanceToClosestPlayer then
				closestPlayerID = getPlayersIDs()[i]
				closestPlayerPos = getPlayersPos()[i]
				distanceToClosestPlayer = vmath.length(playerPos - enemyPos)
			end
		end
		
		local positionDiffrenceAbs = (playerPos - enemyPos)
		positionDiffrenceAbs.x = math.abs(positionDiffrenceAbs.x)
		positionDiffrenceAbs.y = math.abs(positionDiffrenceAbs.y)

		local positionDiffrence = (playerPos - enemyPos)

		local movingDir = vmath.vector3(positionDiffrence.x, positionDiffrence.y, 0)
		movingDir = vmath.normalize(movingDir)

		if distanceToClosestPlayer >= self.followDistance then
			enemyPos = enemyPos + movingDir * self.movingSpeed * dt
			go.set_position(enemyPos)
		elseif distanceToClosestPlayer <= self.runAwayDistance then
			enemyPos = enemyPos + movingDir * -self.movingSpeed * dt
			go.set_position(enemyPos)
		end
	end

	if self.hp <= 0 then
		go.delete()
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("collision_response") then
		if message.group == hash("attacks") then
			local enemyUrl = msg.url()
			local enemyHp = go.get(enemyUrl, "hp")
			local attackDmg = go.get("player#playerAttack", "damage")
			go.set(enemyUrl, "hp", enemyHp - attackDmg)
		end
	end
end
