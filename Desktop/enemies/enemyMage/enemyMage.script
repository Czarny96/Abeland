require "main.globals"

go.property("enemyMovingDir", vmath.vector3(0, 0, 0))
go.property("health", 100)
go.property("damage", 10)

function init(self)
	self.movingSpeed = 50
	self.followDistance = 500
	self.runAwayDistance = 300
end

function update(self, dt)
	if getPlayersIDs() ~= 0 then
		local enemyPos = go.get_position()
		local closestPlayerID = getClosestPlayerID(enemyPos)
		local closestPlayerPos = getPlayerPos(closestPlayerID)
		local distanceToClosestPlayer = vmath.length(closestPlayerPos - enemyPos)
		
		local positionDiffrenceAbs = (closestPlayerPos - enemyPos)
		positionDiffrenceAbs.x = math.abs(positionDiffrenceAbs.x)
		positionDiffrenceAbs.y = math.abs(positionDiffrenceAbs.y)

		local positionDiffrence = (closestPlayerPos - enemyPos)

		local movingDir = vmath.vector3(positionDiffrence.x, positionDiffrence.y, 0)
		movingDir = vmath.normalize(movingDir)

		if distanceToClosestPlayer >= self.followDistance then
			enemyPos = enemyPos + movingDir * self.movingSpeed * dt
			go.set_position(enemyPos)
		elseif distanceToClosestPlayer <= self.runAwayDistance then
			enemyPos = enemyPos + movingDir * -self.movingSpeed * dt
			go.set_position(enemyPos)
		end
	end

	if self.health <= 0 then
		go.delete()
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("collision_response") then
		if message.group == hash("attacks") then
			local enemyUrl = msg.url()
			local enemyHp = go.get(enemyUrl, "hp")
			local attackDmg = go.get("player#playerAttack", "damage")
			go.set(enemyUrl, "hp", enemyHp - attackDmg)
		end
		if message.group == hash("players") then
			local enemyPos = go.get_position()
			local closestPlayerID = getClosestPlayerID(enemyPos)
			local playerUrl = closestPlayerID.."#player"
			local playerHealth = go.get(playerUrl, "health")
			go.set(playerUrl, "health", playerHealth - self.damage)
		end
	end
end
