require "main.globals"

go.property("enemyMovingDir", vmath.vector3(0, 0, 0))
go.property("health", 100)
go.property("damage", 10)
go.property("isKilled", false)

function init(self)
	self.movingSpeed = 50
	self.followDistance = 500
	self.runAwayDistance = 300
	self.killedTimer = 0
end

local function updateAnimation(self)
	if self.enemyMovingDir.x < -0.3 and self.enemyMovingDir.y > 0.3 then
		msg.post("#sprite", "play_animation", {id = hash("enemy_mage_up_left")})
	elseif self.enemyMovingDir.x > 0.3 and self.enemyMovingDir.y > 0.3 then
		msg.post("#sprite", "play_animation", {id = hash("enemy_mage_up_right")})
	elseif self.enemyMovingDir.x < -0.3 and self.enemyMovingDir.y < -0.3 then
		msg.post("#sprite", "play_animation", {id = hash("enemy_mage_down_left")})
	elseif self.enemyMovingDir.x > 0.3 and self.enemyMovingDir.y < -0.3 then
		msg.post("#sprite", "play_animation", {id = hash("enemy_mage_down_right")})
	elseif self.enemyMovingDir.y > 0.3  then
		msg.post("#sprite", "play_animation", {id = hash("enemy_mage_up")})
	elseif self.enemyMovingDir.y < -0.3  then
		msg.post("#sprite", "play_animation", {id = hash("enemy_mage_down")})
	elseif self.enemyMovingDir.x < -0.3  then
		msg.post("#sprite", "play_animation", {id = hash("enemy_mage_left")})
	elseif self.enemyMovingDir.x > 0.3  then
		msg.post("#sprite", "play_animation", {id = hash("enemy_mage_right")})
	else 
		msg.post("#sprite", "play_animation", {id = hash("enemy_mage_down")})
	end
end

local function playDeathAnimation(self)
	msg.post("#sprite", "play_animation", {id = hash("enemy_mage_killed")})
	msg.post("#death_sound", "play_sound", {gain = 0.5})
end

function update(self, dt)
	if getPlayersIDs() ~= 0 and self.isKilled == false then
		local enemyPos = go.get_position()
		local closestPlayerID = getClosestPlayerID(enemyPos)
		local closestPlayerPos = getPlayerPos(closestPlayerID)
		local distanceToClosestPlayer = vmath.length(closestPlayerPos - enemyPos)
		
		local positionDiffrenceAbs = (closestPlayerPos - enemyPos)
		positionDiffrenceAbs.x = math.abs(positionDiffrenceAbs.x)
		positionDiffrenceAbs.y = math.abs(positionDiffrenceAbs.y)

		local positionDiffrence = (closestPlayerPos - enemyPos)

		self.enemyMovingDir = vmath.vector3(positionDiffrence.x, positionDiffrence.y, 0)
		self.enemyMovingDir = vmath.normalize(self.enemyMovingDir)

		if distanceToClosestPlayer >= self.followDistance then
			enemyPos = enemyPos + self.enemyMovingDir * self.movingSpeed * dt
			go.set_position(enemyPos)
			updateAnimation(self)
		elseif distanceToClosestPlayer <= self.runAwayDistance then
			enemyPos = enemyPos + self.enemyMovingDir * -self.movingSpeed * dt
			go.set_position(enemyPos)
			updateAnimation(self)
		end
	end
	
	if self.health <= 0 then
		if self.isKilled == false then
			playDeathAnimation(self)
			self.killedTimer = 10
			self.isKilled = true
		end

		if self.killedTimer <= 0 then
			go.delete()
		else
			self.killedTimer = self.killedTimer - dt
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("collision_response") and self.isKilled == false then
		if message.group == hash("attacks") then
			local enemyUrl = msg.url()
			local enemyHp = go.get(enemyUrl, "hp")
			local attackDmg = go.get("player#playerAttack", "damage")
			go.set(enemyUrl, "hp", enemyHp - attackDmg)
		end
		if message.group == hash("players") then
			local enemyPos = go.get_position()
			local closestPlayerID = getClosestPlayerID(enemyPos)
			local playerUrl = closestPlayerID.."#player"
			local playerHealth = go.get(playerUrl, "health")
			go.set(playerUrl, "health", playerHealth - self.damage)
		end
	end
end
