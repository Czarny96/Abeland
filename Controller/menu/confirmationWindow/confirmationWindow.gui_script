
local scalingButton = require "util/scalingButton"

local confirmScreenNode = nil

-- don't react after clicking button
local lockActions = false

local function buttonPressed(hashedNodeId)

end

local function buttonReleased(hashedNodeId)
	if hashedNodeId == hash("cancelButton") then
		print("Clicked quit button")
		lockActions = true
		gui.cancel_animation(confirmScreenNode, gui.PROP_SCALE)
		gui.animate(confirmScreenNode, gui.PROP_SCALE, vmath.vector3(0,0,0), 
		gui.EASING_INOUTCUBIC, 0.5, 0, function() 
			if g_gameState == g_gameStateEnum.mainMenu then
				-- player is in main menu
				msg.post("/menu#mainMenu", "endGame")
			else
				-- player is in game
				g_confirmationWindowIsOn = false
				msg.post("/go#client", "disconnect")
				msg.post("/xmenu#confirmationWindow", "disable")
				g_goToMainMenu()
			end
		end)
	elseif hashedNodeId == hash("confirmButton") then
		print("Clicked resume button")
		msg.post("/xmenu#confirmationWindow", "hide")
	end
end

function init(self)
	msg.post(".", "acquire_input_focus")

	confirmScreenNode = gui.get_node("confirmScreen")

	self.buttonHolder = {
		cancelButton = scalingButton.create("cancelButton", 0, buttonReleased, buttonPressed),
		confirmButton = scalingButton.create("confirmButton", 0, buttonReleased, buttonPressed)
	}

end

local function start(self)
	lockActions = false

	-- screen is going from black to white
	gui.set_scale(confirmScreenNode, vmath.vector3(0,0,0))
	gui.animate(confirmScreenNode, gui.PROP_SCALE, vmath.vector3(0.7,0.7,0.7), gui.EASING_INOUTCUBIC, 1)
end

function final(self)

end

function update(self, dt)
	
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Remove this function if not needed
	if message_id == hash("show") then
		msg.post("/xmenu#confirmationWindow", "enable")
		g_confirmationWindowIsOn = true
		start(self)
	elseif message_id == hash("hide") then
		lockActions = true
		gui.cancel_animation(confirmScreenNode, gui.PROP_SCALE)
		gui.animate(confirmScreenNode, gui.PROP_SCALE, vmath.vector3(0,0,0), 
		gui.EASING_INOUTCUBIC, 0.5, 0, function() 
			msg.post("/xmenu#confirmationWindow", "disable")
			g_confirmationWindowIsOn = false
			lockActions = false
		end)
	end
end

function on_input(self, action_id, action)
	
	if lockActions then
		return true
	end
	
	if action_id == hash("mouse_left") then


		for idx, button in pairs(self.buttonHolder) do
			button.mouseUpdate(action)
		end
	end

	-- other screens shouldn't process input
	return true
end

function on_reload(self)

end
