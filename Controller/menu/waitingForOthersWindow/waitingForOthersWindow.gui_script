

local screenNode = nil

-- don't react after clicking button
local lockActions = false

function init(self)
	msg.post(".", "acquire_input_focus")

	screenNode = gui.get_node("screen")

	self.timer = 0
	self.waitingText = gui.get_text(gui.get_node("waitingText"))

end

local function start(self)
	lockActions = false
	
	msg.post("/xmenu#waitingForOthersWindow", "enable")

	-- screen is going from black to white
	gui.set_scale(screenNode, vmath.vector3(0,0,0))
	gui.animate(screenNode, gui.PROP_SCALE, vmath.vector3(0.7,0.7,0.7), gui.EASING_INOUTCUBIC, 1)

	-- hide other pop-up windows
	g_hideConfirmationWindow()
end

function final(self)

end

function update(self, dt)
	
	self.timer = self.timer + dt

	if self.timer > 4 then
		self.timer = 0
	end

	local dots = ""

	for i=1, math.floor(self.timer) do
		dots = dots.."."
	end	

	gui.set_text(gui.get_node("waitingText"), self.waitingText..dots)
	
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Remove this function if not needed
	if message_id == hash("show") then

		start(self)
		
	elseif message_id == hash("hide") then
		
		lockActions = true
		gui.cancel_animation(screenNode, gui.PROP_SCALE)
		gui.animate(screenNode, gui.PROP_SCALE, vmath.vector3(0,0,0), 
		gui.EASING_INOUTCUBIC, 0.5, 0, function() 
			msg.post("/xmenu#waitingForOthersWindow", "disable")
		end)
		
	end
end

function on_input(self, action_id, action)
	
	if lockActions and action_id ~= nil then
		return true
	end
	
	-- other screens shouldn't process input (ACCELEROMETER DATA HAS nil ID)
	if action_id ~= nil then
		return true
	end
end

function on_reload(self)

end
